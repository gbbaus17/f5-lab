{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "BigIQ Template for use with F5 FPS labs https://clouddocs.f5.com/training/community/",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "For First Accept BIG-IQ BYOL Terms and Conditions and note Image ID [v6.0.1]"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "https://aws.amazon.com/marketplace/search/results?searchTerms=f5+Big-iq+byol"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "Check \"Outputs\" for setup details after completion"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "NETWORKING CONFIGURATION"
                    },
                    "Parameters": [
                        "VPC",
                        "ManagementSubnet",
                        "SelfIPSubnet"
                    ]
                },
                {
                    "Label": {
                        "default": "BIG-IQ CONFIGURATION"
                    },
                    "Parameters": [
                        "BigIqAdminPassword",
                        "CustomImageId",
                        "InstanceType",
                        "licenseKey1",
                        "licenseKey2",
                        "restrictedSrcAddress",
                        "sshKey",
                        "TimeZone"
                    ]
                },
                {
                    "Label": {
                        "default": "BIG-IQ ADDRESSING"
                    },
                    "Parameters": [
                        "CmManagementIP",
                        "CmSelfIPAddr",
                        "DcdManagementIP",
                        "DcdSelfIPAddr"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPC": {
                    "default": "VPC"
                },
                "CustomImageId": {
                    "default": "BIG-IQ AMI"
                },
                "imageName": {
                    "default": "Image Name"
                },
                "InstanceType": {
                    "default": "AWS Instance Size"
                },
                "licenseKey1": {
                    "default": "BIG-IQ CM License Key F5-BIQ-VE-x-LIC"
                },
                "licenseKey2": {
                    "default": "BIG-IQ DCD License Key F5-BIQ-VE-LOG-NODE"
                },
                "BigIqAdminPassword": {
                    "default": "Big-IQ setup Admin password for GUI/Web Access"
                },
                "sshKey": {
                    "default": "SSH Key"
                },
                "ManagementSubnet": {
                    "default": "Management Subnet"
                },
                "SelfIPSubnet": {
                    "default": "Internal Subnet"
                },
                "CmManagementIP": {
                    "default": "CM Management IP"
                },
                "CmSelfIPAddr": {
                    "default": "CM SelfIP IP"
                },
                "DcdManagementIP": {
                    "default": "DCD Management IP"
                },
                "DcdSelfIPAddr": {
                    "default": "DCD SelfIP IP"
                },
                "TimeZone": {
                    "default": "Timezone (Olson)"
                },
                "restrictedSrcAddress": {
                    "default": "Source Address(es) for Management Access"
                }
            }
        },
        "Version": "1.0.0",
        "AWS::CloudFormation::Designer": {
            "fa276745-812c-4c2f-88a6-9e5ff3667dee": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 600,
                    "y": 130
                },
                "z": 1,
                "embeds": []
            },
            "b79fcb51-d314-4b18-9413-69b028209bac": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 590,
                    "y": 440
                },
                "z": 1,
                "embeds": []
            },
            "837d24c9-afd1-4b93-aea3-3ab9ad358a7c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -50,
                    "y": 150
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "248998c9-d7da-44fd-a258-bc28eb9ff691",
                    "a67e46f4-41e4-4122-80b3-bbf2024cc316"
                ]
            },
            "677ac7e3-68fd-4862-8857-cbebe263692d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 340,
                    "y": 150
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "248998c9-d7da-44fd-a258-bc28eb9ff691",
                    "e956aac1-839c-4ed1-a681-10f9644be2b5"
                ]
            },
            "2ac038e8-8b03-4c9b-96ee-8b84ba49f9a7": {
                "source": {
                    "id": "fa276745-812c-4c2f-88a6-9e5ff3667dee"
                },
                "target": {
                    "id": "677ac7e3-68fd-4862-8857-cbebe263692d"
                },
                "z": 1
            },
            "74c50782-2161-4598-936e-63236e5cd9db": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 150,
                    "y": 150
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "677ac7e3-68fd-4862-8857-cbebe263692d",
                    "837d24c9-afd1-4b93-aea3-3ab9ad358a7c"
                ]
            },
            "3ba8603e-7a60-42cc-ab79-d38682fcc298": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 10,
                    "y": 420
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "248998c9-d7da-44fd-a258-bc28eb9ff691",
                    "a67e46f4-41e4-4122-80b3-bbf2024cc316"
                ]
            },
            "ed2e8f9d-75a0-472c-a51e-1e592197b0b1": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 290,
                    "y": 420
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "248998c9-d7da-44fd-a258-bc28eb9ff691",
                    "e956aac1-839c-4ed1-a681-10f9644be2b5"
                ]
            },
            "5a74edd7-a613-446f-827b-ae536e08783c": {
                "source": {
                    "id": "b79fcb51-d314-4b18-9413-69b028209bac"
                },
                "target": {
                    "id": "ed2e8f9d-75a0-472c-a51e-1e592197b0b1"
                },
                "z": 1
            },
            "396b4674-578a-49ed-b837-71555b4a092c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 150,
                    "y": 420
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "ed2e8f9d-75a0-472c-a51e-1e592197b0b1",
                    "3ba8603e-7a60-42cc-ab79-d38682fcc298"
                ]
            },
            "e956aac1-839c-4ed1-a681-10f9644be2b5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 290,
                    "y": 290
                },
                "z": 1,
                "embeds": []
            },
            "a67e46f4-41e4-4122-80b3-bbf2024cc316": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 10,
                    "y": 290
                },
                "z": 1,
                "embeds": []
            },
            "5b0c4b5f-3186-4e58-90d2-69a8daddc74e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -150,
                    "y": 310
                },
                "z": 1,
                "embeds": []
            }
        }
    },
    "Parameters": {
        "VPC": {
            "ConstraintDescription": "This must be an existing VPC within the working region.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "CustomImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "ami-06f4512c73253cfce",
            "Description": "Please specify the a v6.x.latest AMI Id that you have Agreed to T&Cs [N.VA=ami-06f4512c73253cfce; SYD=ami-069b21b3347773840]",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IQ",
            "Default": "m4.2xlarge",
            "Description": "Size of the F5 BIG-IQ Instance |'m4.2xlarge' has 8 cores, 32Gb RAM @~50cents/hour",
            "Type": "String"
        },
        "licenseKey1": {
            "ConstraintDescription": "Verify your F5 BYOL regkey.",
            "Description": "F5 BIG-IQ Central Manager license key",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "licenseKey2": {
            "ConstraintDescription": "Verify your F5 BYOL regkey.",
            "Description": "F5 BIG-IQ Logging Node license key",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "BigIqAdminPassword": {
            "Default": "f5DEMOs4u!",
            "Description": "Big-IQ setup Admin password for GUI/Web Access",
            "Type": "String"
        },
        "sshKey": {
            "Description": "Key pair for accessing the instance. See, https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ManagementSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Management Subnet",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "SelfIPSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Internal Subnet - used for data transfer",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "CmManagementIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in the form x.x.x.x",
            "Default": "10.1.1.249",
            "Description": "CM Management IP - Lab Default is 10.1.1.249",
            "MaxLength": 15,
            "MinLength": 7,
            "Type": "String"
        },
        "CmSelfIPAddr": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in the form x.x.x.x",
            "Default": "10.1.20.249",
            "Description": "CM SelfIP IP - Lab Default is 10.1.20.249",
            "MaxLength": 15,
            "MinLength": 7,
            "Type": "String"
        },
        "DcdManagementIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in the form x.x.x.x",
            "Default": "10.1.1.248",
            "Description": "DCD Management IP - Lab Default is 10.1.1.248",
            "MaxLength": 15,
            "MinLength": 7,
            "Type": "String"
        },
        "DcdSelfIPAddr": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in the form x.x.x.x",
            "Default": "10.1.20.248",
            "Description": "DCD SelfIP IP - Lab Default is Internal vlan 10.1.20.248",
            "MaxLength": 15,
            "MinLength": 7,
            "Type": "String"
        },
        "TimeZone": {
            "Default": "Australia/NSW",
            "Description": "Olson TimeZone string from /usr/share/zoneinfo eg: America/Los_Angeles",
            "Type": "String"
        },
        "restrictedSrcAddress": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
        }
    },
    "Resources": {
        "BigIqCm": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "00-create-symbolic-link": {
                                "command": "ln /config/cloud/setup-cm-runme-second.sh /home/admin/setup-cm-runme-second.sh --symbolic"
                            }
                        },
                        "files": {
                            "/config/cloud/setup-cm-runme-second.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
										"#!/bin/bash",
										"echo \"CM - About to License, Set password, Create vlan and set Self-ip, and connect to DCD\"",
										"CMETH0GATEWAY=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/local-ipv4 | awk -F. '{ print $1\".\"$2\".\"$3\".1\" }'`",
										"HOSTNAME=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
										"ETH1_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`",
										"CM_SELFIP_MASK=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${ETH1_MAC}/subnet-ipv4-cidr-block  | cut -d \"/\" -f2`",
										{
											"Fn::Join": [
												"",
												[
													"CM_MGMT_ADDR=",
													{
														"Ref": "CmManagementIP"
													}
												]
											]
										},
										"BIGIQ_ADMIN_USER=admin",
										{
											"Fn::Join": [
												"",
												[
													"BIGIQ_PWD=",
													{
														"Ref": "BigIqAdminPassword"
													}
												]
											]
										},
										{
											"Fn::Join": [
												"",
												[
													"CM_SELFIP_ADDR=",
													{
														"Ref": "CmSelfIPAddr"
													}
												]
											]
										},
										{
											"Fn::Join": [
												"",
												[
													"DCD_MGMT_ADDR=",
													{
														"Ref": "DcdManagementIP"
													}
												]
											]
										},
										{
											"Fn::Join": [
												"",
												[
													"DCD_SELFIP_ADDR=",
													{
														"Ref": "DcdSelfIPAddr"
													}
												]
											]
										},											
										{
											"Fn::Join": [
												"",
												[
													"TZ=",
													{
														"Ref": "TimeZone"
													}
												]
											]
										},
										"VLAN1_NAME=internal",
										"VLAN1_TAG=20",
										"mkdir -p /config/cloud",
										"cd /config/cloud/",
										"mount -o remount,rw /usr",
										"# Pull down scripts, vlan and selfip templates",
										"curl https://raw.githubusercontent.com/gbbaus17/F5-Lab/master/bigiq-cm-dcd/bigiq-scripts/bigiq-scripts.tar > bigiq-scripts.tar",
										"tar -xvf bigiq-scripts.tar",
										"chmod 777 *.py",
										"######################################",
										"###########Starting Config#############",
										"echo \"Starting tmsh config\"",
										"tmsh modify auth user admin password ${BIGIQ_PWD}",
										"sleep 10",
										"tmsh save sys config",
										"#LICENSE VIA SOAP CLIENT",
										{
											"Fn::Join": [
												" ",
												[
													"/usr/local/bin/SOAPLicenseClient --verbose --basekey",
													{
														"Ref": "licenseKey1"
													}
												]
											]
										},
										"sleep 10",
										"#tmsh modify sys ntp TimeZone ${TZ}",
										"#tmsh modify sys ntp servers add { 0.pool.ntp.org }",
										"#tmsh create net vlan ${VLAN_NAME} interfaces add {1.1}",
										"#tmsh create net self ${CM_SELFIP_ADDR}/${CM_SELFIP_MASK} vlan ${VLAN_NAME}",
										"#tmsh modify sys global-settings hostname ${HOSTNAME}",
										"sleep 5",
										"tmsh save sys config",
										"echo \"Done tmsh setup\"",
										"echo \"Starting API calls\"",
										"set-basic-auth on",
										"sleep 5",
										"##PREP DOWNLOADED INPUT TEMPLATE FILE AND CREATE VLAN##",
										"sed -i \"s/VLAN1_NAME_VAR/${VLAN1_NAME}/g;s/VLAN1_TAG_VAR/${VLAN1_TAG}/g\" /config/cloud/vlan1_create.json",
										"sleep 3",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${CM_MGMT_ADDR}/mgmt/tm/net/vlan -H 'Content-Type: application/json' --data @/config/cloud/vlan1_create.json",
										"echo \"# sleep 10\"",
										"sleep 10",
										"##PREP DOWNLOADED INPUT TEMPLATE FILE AND CREATE SELFIP##",
										"##SELF-IP PORTS AS PER SUPPORT ARTICLE K15612##",
										"sed -i \"s/CM_SELFIP_VAR/${CM_SELFIP_ADDR}/g;s/VLAN1_NAME_VAR/${VLAN1_NAME}/g\" /config/cloud/selfip1_cm_create.json",
										"sleep 3",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${CM_MGMT_ADDR}/mgmt/tm/net/self -H 'Content-Type: application/json' --data @/config/cloud/selfip1_cm_create.json",
										"echo \"# sleep 10\"",
										"sleep 10",											
										"#SET HOSTNAME AND MANAGEMENT ROUTES",
										{
										"Fn::Join": [
											"",
											[
											"curl https://${CM_MGMT_ADDR}/mgmt/shared/system/easy-setup -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json;charset=UTF-8' --insecure --data \"{\\\"hostname\\\":\\\"${HOSTNAME}\\\",\\\"managementIpAddress\\\":\\\"",
											 {
											   "Ref": "CmManagementIP"
											 },
											"/24\\\",\\\"managementRouteAddress\\\":\\\"${CMETH0GATEWAY}\\\"}\""
											]
										 ]
										},
										"echo \"# sleep 10\"",
										"sleep 10",										
										"#SET DISCOVERY ADDRESS",
										"curl https://${CM_MGMT_ADDR}/mgmt/shared/identified-devices/config/discovery -X PUT --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data \"{\\\"discoveryAddress\\\":\\\"${CM_MGMT_ADDR}\\\"}\"",
										"echo \"# sleep 10\"",
										"sleep 10",										
										"##SET DNS SERVER##",
										"curl -X PATCH --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${CM_MGMT_ADDR}/mgmt/tm/sys/dns -H 'Content-Type: application/json' --data '{\"nameServers\":[\"8.8.8.8\"],\"search\":[\"localhost\"]}'",
										"echo \"#\"",
										"sleep 3",
										"#NTP",
										"curl https://${CM_MGMT_ADDR}/mgmt/tm/sys/ntp -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data \"{\\\"servers\\\":[\\\"pool.ntp.org\\\"],\\\"timezone\\\":\\\"${TZ}\\\"}\"",
										"echo \"#\"",
										"sleep 3",
										"#SET MASTER KEY",
										"curl https://${CM_MGMT_ADDR}/mgmt/cm/shared/secure-storage/masterkey -X POST --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"passphrase\":\"ValidPassphrase1234567812345678!\"}'",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SYSTEM SETUP WIZARD FLAG",
										"curl https://${CM_MGMT_ADDR}/mgmt/shared/system/setup -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"isSystemSetup\":\"true\"}'",
										"echo \"#\"",
										"sleep 3",
										"#SAVE",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${CM_MGMT_ADDR}/mgmt/tm/sys/config -H 'Content-Type: application/json' --data '{\"command\":\"save\"}'",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#ADD DCD TO CM",
										"/config/cloud/add-dcd-2.py --DCD_IP_ADDRESS ${DCD_MGMT_ADDR} --DCD_TRANSPORT_ADDRESS ${DCD_MGMT_ADDR} --DCD_PWD ${BIGIQ_PWD} --DCD_USERNAME ${BIGIQ_ADMIN_USER}",
										"echo \"# sleep 60\"",
										"sleep 60",
										"/config/cloud/activate-dcd-services.py --SERVICES asm --DCD_IP_ADDRESS ${DCD_MGMT_ADDR}",
										"echo \"#\"",
										"sleep 5",
										"/config/cloud/activate-dcd-services.py --SERVICES websafe --DCD_IP_ADDRESS ${DCD_MGMT_ADDR}",
										"echo \"#\"",
										"sleep 5",
										"echo \"Done activating services\"",
										"sleep 5",
										"#TOUCH UI",
										"curl -X PUT https://${CM_MGMT_ADDR}/mgmt/shared/authz/users/admin/ui-preferences -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' --insecure --data '{\"key\":\"USERPREFS\",\"value\":{\"navigation_lastlayout\":\"/ui/system/default\"}}'",
										"echo \"#\"",
										"#SAVE",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${CM_MGMT_ADDR}/mgmt/tm/sys/config -H 'Content-Type: application/json' --data '{\"command\":\"save\"}'",
										"echo \"#\"",
										"sleep 5",
										"echo \"Finished\"",
										"set-basic-auth off",
										"echo \"You can reboot\""
										]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "396b4674-578a-49ed-b837-71555b4a092c"
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Ref": "CustomImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "BIG-IQ CM Instance Mngmt NIC",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "BigIqCmMngmntInterfcae"
                        }
                    },
                    {
                        "Description": "BIG-IQ CM Instance Data Plane NIC",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "BigiqCmInternalInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "F5Lab:",
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    ":CM"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "SSHConnectivity",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "ssh -i your-aws-key.pem admin@",
                                    {
                                        "Ref": "CmElasticIp"
                                    },
                                    " and run setup second"
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "BigIqCm",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "BigIqCmMngmntInterfcae": {
            "Properties": {
                "Description": "BIG-IQ CM Management Interface",
                "GroupSet": [
                    {
                        "Ref": "BigIqAllowAllSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "ManagementSubnet"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Ref": "CmManagementIP"
                        },
                        "Primary": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5Labs:BigIQ:Management"
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ed2e8f9d-75a0-472c-a51e-1e592197b0b1"
                }
            }
        },
        "BigiqCmInternalInterface": {
            "Properties": {
                "Description": "BIG-IQ CM Data Plane Interface",
                "GroupSet": [
                    {
                        "Ref": "BigIqAllowAllSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "SelfIPSubnet"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Ref": "CmSelfIPAddr"
                        },
                        "Primary": "true"
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3ba8603e-7a60-42cc-ab79-d38682fcc298"
                }
            }
        },
        "BigIqDcd": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "00-create-symbolic-link": {
                                "command": "ln /config/cloud/setup-dcd-runme-first.sh /home/admin/setup-dcd-runme-first.sh --symbolic"
                            }
                        },
                        "files": {
                          "/config/cloud/setup-dcd-runme-first.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
										"#!/bin/bash",
										"echo \"DCD - About to License, Set password, Create vlan and set Self-ip. Should take about 5 min\"",
										"HOSTNAME=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
										"DCDETH0GATEWAY=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/local-ipv4 | awk -F. '{ print $1\".\"$2\".\"$3\".1\" }'`",
										"ETH1_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`",
										"DCD_SELFIP_MASK=`curl --fail --silent --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${ETH1_MAC}/subnet-ipv4-cidr-block  | cut -d \"/\" -f2`",
										{
											"Fn::Join": [
												"",
												[
													"DCD_MGMT_ADDR=",
													{
														"Ref": "DcdManagementIP"
													}
												]
											]
										},
										"BIGIQ_ADMIN_USER=admin",
										{
											"Fn::Join": [
												"",
												[
													"BIGIQ_PWD=",
													{
														"Ref": "BigIqAdminPassword"
													}
												]
											]
										},
										{
											"Fn::Join": [
												"",
												[
													"DCD_SELFIP_ADDR=",
													{
														"Ref": "DcdSelfIPAddr"
													}
												]
											]
										},
										{
											"Fn::Join": [
												"",
												[
													"TZ=",
													{
														"Ref": "TimeZone"
													}
												]
											]
										},
										"VLAN1_NAME=internal",
										"VLAN1_TAG=20",
										"mkdir -p /config/cloud",
										"cd /config/cloud/",
										"mount -o remount,rw /usr",
										"# Pull down scripts, vlan and selfip templates",
										"curl https://raw.githubusercontent.com/gbbaus17/F5-Lab/master/bigiq-cm-dcd/bigiq-scripts/bigiq-scripts.tar > bigiq-scripts.tar",
										"tar -xvf bigiq-scripts.tar",
										"chmod 777 *.py",
										"echo \"Starting tmsh config\"",
										"tmsh modify auth user admin password ${BIGIQ_PWD}",
										"sleep 10",
										"tmsh save sys config",										
										"#LICENSE VIA SOAP CLIENT",
										{
											"Fn::Join": [
												" ",
												[
													"/usr/local/bin/SOAPLicenseClient --verbose --basekey",
													{
														"Ref": "licenseKey2"
													}
												]
											]
										},
										"sleep 10",
										"#tmsh modify sys ntp TimeZone ${TZ}",
										"#tmsh modify sys ntp servers add { 0.pool.ntp.org }",
										"#tmsh create net vlan ${VLAN_NAME} interfaces add {1.1}",
										"#tmsh create net self ${DCD_SELFIP_MASK} vlan ${VLAN_NAME}",
										"#tmsh modify sys global-settings hostname ${HOSTNAME}",
										"sleep 5",
										"tmsh save sys config",
										"echo \"Done tmsh setup\"",
										"echo \"Starting API calls\"",
										"set-basic-auth on",
										"sleep 5",
										"# PREP DOWNLOADED INPUT TEMPLATE FILE AND CREATE VLAN",
										"sed -i \"s/VLAN1_NAME_VAR/${VLAN1_NAME}/g;s/VLAN1_TAG_VAR/${VLAN1_TAG}/g\" /config/cloud/vlan1_create.json",
										"sleep 3",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${DCD_MGMT_ADDR}/mgmt/tm/net/vlan -H 'Content-Type: application/json' --data @/config/cloud/vlan1_create.json",
										"echo \"# sleep 10\"",
										"sleep 10",										
										"##PREP DOWNLOADED INPUT TEMPLATE FILE AND CREATE SELFIP##",
										"##SELF-IP PORTS AS PER SUPPORT ARTICLE K15612##",
										"sed -i \"s/DCD_SELFIP_VAR/${DCD_SELFIP_ADDR}/g;s/VLAN1_NAME_VAR/${VLAN1_NAME}/g\" /config/cloud/selfip1_dcd_create.json",
										"sleep 3",	
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${DCD_MGMT_ADDR}/mgmt/tm/net/self -H 'Content-Type: application/json' --data @/config/cloud/selfip1_dcd_create.json",
										"echo \"# sleep 10\"",
										"sleep 10",											
										"#SET DCD PERSONALITY#",
										"curl https://${DCD_MGMT_ADDR}/mgmt/cm/system/provisioning -X POST --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"systemPersonality\":\"logging_node\"}'",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SET IP AND MANAGEMENT ROUTES",
										{
										"Fn::Join": [
											"",
											[
											"curl https://${DCD_MGMT_ADDR}/mgmt/shared/system/easy-setup -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json;charset=UTF-8' --insecure --data \"{\\\"hostname\\\":\\\"${HOSTNAME}\\\",\\\"managementIpAddress\\\":\\\"",
											 {
											   "Ref": "DcdManagementIP"
											 },
											"/24\\\",\\\"managementRouteAddress\\\":\\\"${DCDETH0GATEWAY}\\\"}\""
											]
										 ]
										},											
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SET DISCOVERY ADDRESS",
										"curl https://${DCD_MGMT_ADDR}/mgmt/shared/identified-devices/config/discovery -X PUT --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data \"{\\\"discoveryAddress\\\":\\\"${DCD_MGMT_ADDR}\\\"}\"",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SET DNS",
										"curl https://${DCD_MGMT_ADDR}/mgmt/tm/sys/dns -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"nameServers\":[\"8.8.8.8\"],\"search\":[\"localhost\"]}'",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SET NTP AND TIMEZONE",
										"curl https://${DCD_MGMT_ADDR}/mgmt/tm/sys/ntp -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data \"{\\\"servers\\\":[\\\"pool.ntp.org\\\"],\\\"timezone\\\":\\\"${TZ}\\\"}\"",
										"echo \"# sleep 10\"",
										"sleep 10",	
										"#SET MASTERKEY",
										"curl https://${DCD_MGMT_ADDR}/mgmt/cm/shared/secure-storage/masterkey -X POST --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"passphrase\":\"ValidPassphrase1234567812345678!\"}'",
										"echo \"# sleep 10\"",
										"sleep 10",
										"#SYSTEM SETUP WIZARD FLAG",
										"curl https://${DCD_MGMT_ADDR}/mgmt/shared/system/setup -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"isSystemSetup\":\"true\"}'",
										"echo \"#\"",
										"sleep 3",
										"#SAVE",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${DCD_MGMT_ADDR}/mgmt/tm/sys/config -H 'Content-Type: application/json' --data '{\"command\":\"save\"}'",
										"echo \"# sleep 10\"",
										"sleep 10",										
										"#RESTART SERVICES",
										"curl https://${DCD_MGMT_ADDR}/mgmt/shared/failover-state -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"restart\":\"true\"}'",
										"echo \"# sleep 60\"",
										"sleep 60",
										"#SYSTEM SETUP WIZARD FLAG",
										"curl https://${DCD_MGMT_ADDR}/mgmt/shared/system/setup -X PATCH --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json' --fail --insecure --data '{\"isSystemSetup\":\"true\"}'",
										"echo \"#\"",
										"echo \"Done setup\"",
										"sleep 5",
										"#TOUCH UI",
										"curl -X PUT https://${DCD_MGMT_ADDR}/mgmt/shared/authz/users/admin/ui-preferences -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' --insecure --data '{\"key\":\"USERPREFS\",\"value\":{\"navigation_lastlayout\":\"/ui/system/default\"}}'",
										"echo \"#\"",
										"sleep 2",
										"#SAVE",
										"curl -X POST --fail --insecure --user ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${DCD_MGMT_ADDR}/mgmt/tm/sys/config -H 'Content-Type: application/json' --data '{\"command\":\"save\"}'",
										"echo \"#\"",
										"sleep 5",
										"echo \"Finished\"",
										"set-basic-auth off"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
						  "/config/cloud/example-firstrun-function-loops.sh": {
							"content": {
							  "Fn::Join": [
								"",
								[
								  "#!/bin/bash\n",
								  "FILE=/tmp/firstrun.log\n",
								  "if [ ! -e $FILE ]\n",
								  " then\n",
								  "     touch $FILE\n",
								  "     nohup $0 0<&- &>/dev/null &\n",
								  "     exit\n",
								  "fi\n",
								  "#################################\n",
								  "function checkF5Ready {\n",
								  "     sleep 5\n",
								  "     while [[ ! -e '/var/prompt/ps1' ]]\n",
								  " do\n",
								  "     echo -n '.'\n",
								  "     sleep 5\n",
								  "done \n",
								  "sleep 5\n",
								  "STATUS=`cat /var/prompt/ps1`\n",
								  "while [[ ${STATUS}x != 'NO LICENSE'x ]]\n",
								  " do\n",
								  "     echo -n '.'\n",
								  "     sleep 5\n",
								  "     STATUS=`cat /var/prompt/ps1`\n",
								  "done\n",
								  "echo -n ' '\n",
								  "while [[ ! -e '/var/prompt/cmiSyncStatus' ]]\n",
								  " do\n",
								  "     echo -n '.'\n",
								  "     sleep 5\n",
								  "done \n",
								  "STATUS=`cat /var/prompt/cmiSyncStatus`\n",
								  "while [[ ${STATUS}x != 'Standalone'x ]]\n",
								  " do\n",
								  "     echo -n '.'\n",
								  "     sleep 5\n",
								  "     STATUS=`cat /var/prompt/cmiSyncStatus`\n",
								  "done\n",
								  "}\n",
								  "\n",
								  "\n",                      
								  "function checkStatusnoret {\n",
								  "sleep 10\n",
								  "STATUS=`cat /var/prompt/ps1`\n",
								  "while [[ ${STATUS}x != 'Active'x ]]\n",
								  " do\n",
								  "     echo -n '.'\n",
								  "     sleep 5\n",
								  "     STATUS=`cat /var/prompt/ps1`\n",
								  "done\n",
								  "}\n",
								  "#################################\n",      
								  "exec 1<&-\n",
								  "exec 2<&-\n",
								  "exec 1<>$FILE\n",
								  "exec 2>&1\n",
								  
								  "checkF5Ready\n",
								  "sleep 20\n",
								  
								  "tmsh modify auth user admin password $ADMIN_PASSWORD\n",
								  "tmsh modify sys dns name-servers add {10.0.0.2}\n",
								  "sleep 20\n",
								  "tmsh save /sys config\n",
								  "checkStatusnoret\n",
								  "echo \"Setting hostname: $HOSTNAME\"\n",
								  "tmsh modify /sys global-settings hostname $HOSTNAME\n",
								  "tmsh mv cm device bigip1 $HOSTNAME\n",
								  "tmsh modify sys ntp timezone \"$TZ\"\n",
								  "tmsh modify sys db setup.run value false\n",
								  "tmsh save /sys config\n"
								]
							  ]
							},
							"mode": "000755",
							"owner": "root",
							"group": "root"
						  }
	
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "74c50782-2161-4598-936e-63236e5cd9db"
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Ref": "CustomImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "BIG-IQ DCD Instance Mngmt NIC",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "BigIqDcdMngmntInterfcae"
                        }
                    },
                    {
                        "Description": "BIG-IQ DCD Instance Data Plane NIC",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "BigiqDcdInternalInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "F5Lab:",
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    ":DCD"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "SSHConnectivity",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "ssh -i your-aws-key.pem admin@",
                                    {
                                        "Ref": "DcdElasticIp"
                                    },
                                    " and run setup first"
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "BigIqDcd",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "BigIqDcdMngmntInterfcae": {
            "Properties": {
                "Description": "BIG-IQ DCD Management Interface",
                "GroupSet": [
                    {
                        "Ref": "BigIqAllowAllSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "ManagementSubnet"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Ref": "DcdManagementIP"
                        },
                        "Primary": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5Labs:BigIQ:Management"
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "677ac7e3-68fd-4862-8857-cbebe263692d"
                }
            }
        },
        "BigiqDcdInternalInterface": {
            "Properties": {
                "Description": "BIG-IQ DCD Data Plane Interface",
                "GroupSet": [
                    {
                        "Ref": "BigIqAllowAllSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "SelfIPSubnet"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Ref": "DcdSelfIPAddr"
                        },
                        "Primary": "true"
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "837d24c9-afd1-4b93-aea3-3ab9ad358a7c"
                }
            }
        },
        "CmEipAssociation": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "CmElasticIp",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "BigIqCmMngmntInterfcae"
                }
            },
            "Type": "AWS::EC2::EIPAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5a74edd7-a613-446f-827b-ae536e08783c"
                }
            }
        },
        "CmElasticIp": {
            "Properties": {
                "Domain": "VPC"
            },
            "Type": "AWS::EC2::EIP",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b79fcb51-d314-4b18-9413-69b028209bac"
                }
            }
        },
        "DcdEipAssociation": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "DcdElasticIp",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "BigIqDcdMngmntInterfcae"
                }
            },
            "Type": "AWS::EC2::EIPAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2ac038e8-8b03-4c9b-96ee-8b84ba49f9a7"
                }
            }
        },
        "DcdElasticIp": {
            "Properties": {
                "Domain": "VPC"
            },
            "Type": "AWS::EC2::EIP",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "fa276745-812c-4c2f-88a6-9e5ff3667dee"
                }
            }
        },
        "BigIqAllowAllSecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow All from Intra-VPC only",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.1.0.0/16",
                        "FromPort": "1",
                        "IpProtocol": "tcp",
                        "ToPort": "65535"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    ":Int Security Group"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a67e46f4-41e4-4122-80b3-bbf2024cc316"
                }
            }
        },
        "BigIqManagementSecurityGroup": {
            "Properties": {
                "GroupDescription": "BIG-IP management interface policy",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    ":Mngmt Security Group"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e956aac1-839c-4ed1-a681-10f9644be2b5"
                }
            }
        }
    },
    "Outputs": {
        "BigIqCmEipAddress": {
            "Description": "IP address of the management port on BIG-IQ",
            "Value": {
                "Ref": "CmElasticIp"
            }
        },
        "BigIqCmManagementPrivateIp": {
            "Description": "Internal IP of Management Interfcae on BIG-IQ",
            "Value": {
                "Fn::GetAtt": [
                    "BigIqCmMngmntInterfcae",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "BigIqDcdEipAddress": {
            "Description": "IP address of the management port on BIG-IQ",
            "Value": {
                "Ref": "DcdElasticIp"
            }
        },
        "BigIqDcdManagementPrivateIp": {
            "Description": "Internal IP of Management Interfcae on BIG-IQ",
            "Value": {
                "Fn::GetAtt": [
                    "BigIqDcdMngmntInterfcae",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "BigiqAdminPassword": {
            "Description": "To change run 'modify auth password admin' at CLI",
            "Value": {
                "Ref": "BigIqAdminPassword"
            }
        },
        "availabilityZone1": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "BigIqCm",
                    "AvailabilityZone"
                ]
            }
        },
        "AppliedSecurityGroup": {
            "Description": "Big-IQ Security Group",
            "Value": {
                "Ref": "BigIqAllowAllSecurityGroup"
            }
        },
        "NextSteps": {
            "Description": "ssh to DCD then CM run ./setup-xxx-runme-xxx.sh",
            "Value": "setup-xxx-runme-xxx.sh"
        }
    }
}